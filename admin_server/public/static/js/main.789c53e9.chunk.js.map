{"version":3,"sources":["api/http.js","api/index.js","utils/storageUtils.js","redux/actions.js","redux/action-types.js","pages/login/Login.jsx","config/menuConfig.js","components/left-nav/LeftNav.jsx","components/link-button/index.jsx","utils/dateUtils.js","components/top-nav/TopNav.jsx","pages/home/Line.jsx","pages/home/Bar.jsx","pages/home/Home.jsx","pages/category/AddForm.jsx","pages/category/UpdateForm.jsx","pages/category/Category.jsx","utils/constants.js","utils/memoryUtils.js","pages/product/ProductHome.jsx","pages/product/PictureWall.jsx","pages/product/RichTextEditor.jsx","pages/product/ProductAddUpdate.jsx","pages/product/ProductDetails.jsx","pages/product/Product.jsx","pages/role/AddRoles.jsx","pages/role/TreeRole.jsx","pages/role/Role.jsx","pages/user/UserForm.jsx","pages/user/User.jsx","pages/charts/Bar.jsx","pages/charts/Line.jsx","pages/charts/Pie.jsx","pages/error/Error.jsx","pages/admin/Admin.jsx","App.js","serviceWorker.js","redux/reducer.js","redux/store.js","index.js"],"names":["http","url","data","arguments","length","undefined","method","Promise","resolve","reject","axios","get","params","post","then","response","catch","err","message","error","reqLogin","username","password","reqAddOrUpdateUser","user","_id","reqDeleteUser","userId","reqUserList","reqCategory","parentId","reqAddCategory","_ref","categoryName","reqUpdateCategory","_ref2","categoryId","reqProducts","pageNum","pageSize","reqSearchProducts","_ref3","searchType","searchName","Object","defineProperty","reqAddOrUpdateProduct","product","reqCategoryId","reqUpdateStatus","productId","status","reqDeleteImg","name","reqRole","reqAddRole","roleName","reqRoleAuth","role","reqWeather","city","concat","jsonp","_data$results$0$weath","results","weather_data","dayPictureUrl","weather","storageUtils","store","set","remove","getUser","type","logout","Login","handleSubmit","e","preventDefault","_this","props","form","validateFields","asyncToGenerator","regenerator_default","a","mark","_callee","values","wrap","_context","prev","next","console","log","login","stop","_x","_x2","apply","this","_react_16_8_6_react_default","createElement","react_router","to","getFieldDecorator","className","es_form","onSubmit","Item","rules","required","whiteSpace","min","max","pattern","initialValue","input","prefix","icon","style","color","placeholder","es_button","htmlType","Component","wrapperLogin","create","connect","state","dispatch","result","msg","sent","menuList","title","key","isPublic","children","SubMenu","menu","LeftNav","hasAuth","item","menus","indexOf","find","child","getMenuNodes","path","location","pathname","map","cItem","openKey","setHeaderTitle","react_router_dom","onClick","menuNodes","mode","theme","selectedKeys","defaultOpenKeys","headerTitle","withRouter","LinkButton","assign","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","TopNav","currentTime","now","getTime","intervalId","setInterval","setState","getWeather","modal","confirm","content","okText","cancelText","onOk","clearInterval","_this$state","src","alt","Line","dv","DataSet","createView","source","month","b","c","transform","fields","value","float","width","height","BizCharts","scale","range","forceFit","label","formatter","val","crosshairs","position","size","shape","stroke","lineWidth","React","Bar","marginLeft","year","sales","tickInterval","RangePicker","Home","isVisited","handleChange","card","extra","headStyle","statistic","suffix","fontWeight","valueStyle","fontSize","Line_Line","defaultValue","moment","format","bodyStyle","padding","Bar_Bar","timeline","Option","es_select","AddForm","setForm","_this$props","category","category_AddForm","UpdateForm","UpdateForm_Item","category_UpdateForm","Category","subCategorys","loading","parentName","initColumn","columns","dataIndex","render","update","divider","showSubCategory","getCategory","showCategory","handleCancel","add","addCategory","_callee2","_this$form$getFieldsV","_context2","getFieldsValue","success","updateCategory","_callee3","_context3","getFieldValue","_this2","table","dataSource","bordered","pagination","defaultPageSize","showQuickJumper","rowKey","visible","onCancel","PAGE_SIZE","BASE_IMG_URL","memoryUtils","Options","ProductHome","products","total","initColumns","price","newStatus","updateStatus","showDetails","showUpdate","history","push","getProducts","_result$data","list","_this$state2","onChange","margin","event","target","current","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PictureWall","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","previewVisible","handlePreview","preview","originFileObj","previewImage","fileList","getImgs","imgs","img","index","uid","uploadButton","upload","accept","action","listType","onPreview","footer","RichTextEditor","onEditorStateChange","editorState","getDetail","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","createEmpty","react_draft_wysiwyg","editorStyle","border","minHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","TextArea","ProductAddUpdate","options","validatorPrice","rule","callback","submit","desc","categoryIds","pCategoryId","pw","ed","isUpdate","goBack","initOptions","_assertThisInitialize","subCategory","cOptions","isLeaf","assertThisInitialized","option","_x3","abrupt","_x4","loadData","_ref4","_callee4","selectedOptions","targetOption","_context4","toConsumableArray","_x5","createRef","labelCol","span","wrapperCol","ProductAddUpdate_Item","autosize","minRows","maxRows","validator","addonAfter","cascader","changeOnSelect","product_PictureWall","ref","product_RichTextEditor","PureComponent","product_ProductAddUpdate","es_list","ProductDetails","cName1","cName2","all","_memoryUtils$product2","ProductDetails_Item","dangerouslySetInnerHTML","__html","Product","exact","component","AddRoles","AddRoles_Item","role_AddRoles","TreeNode","TreeRole","onCheck","checkedKeys","getTreeNode","getMenus","treeNode","TreeRole_Item","disabled","tree","defaultExpandAll","checkable","Role","onRow","getRoleList","roles","addRoles","isShowAdd","authRole","auth","auth_name","isShowAuth","role_id","info","marginRight","rowSelection","selectedRowKeys","onSelect","role_TreeRole","UserForm","phoneValidate","test","emailValidate","UserForm_Item","phone","email","UserForm_Option","user_UserForm","User","roleNames","deleteUser","initRoleNames","reduce","pre","getUserList","users","addOrUpdateUser","isShow","showAdd","_onOk","salesVolume","sale","Stock","stock","getOption","text","tooltip","legend","xAxis","yAxis","series","lib_default","Pie","subtext","x","trigger","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getOption2","backgroundColor","top","textStyle","visualMap","show","inRange","colorLightness","sort","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","Error","row","col","replace","Footer","Sider","Content","Admin","layout","left_nav_LeftNav","top_nav_TopNav","from","App","Boolean","window","hostname","match","initUser","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","thunk","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.789c53e9.chunk.js","sourcesContent":["/*\r\n*  TODO 封装ajax请求\r\n* */\r\nimport axios from 'axios';\r\nimport {message} from 'antd';\r\n\r\n\r\nexport default function http(url, data = {}, method = 'GET') {\r\n   return new Promise((resolve, reject) => {\r\n       let res;\r\n       if (method === 'GET') res = axios.get(url, {params: data}, method);\r\n       else res = axios.post(url, data, method);\r\n       res.then(response => {\r\n           resolve(response.data);\r\n       }).catch(err => {\r\n           message.error('请求失败了' + err.message);\r\n       })\r\n   });\r\n}\r\n","/**\r\n *  TODO 封装请求接口\r\n */\r\nimport jsonp from 'jsonp';\r\nimport http from './http';\r\nimport {message} from 'antd';\r\n\r\nconst BASE = '';\r\n/**\r\n * TODO 登录接口\r\n * @param username\r\n * @param password\r\n */\r\nexport const reqLogin = (username, password) => http(BASE + '/login', {username, password}, 'POST');\r\n/**\r\n * TODO 添加用户接口\r\n * @param user\r\n */\r\nexport const reqAddOrUpdateUser = (user) => http(BASE + '/manage/user/' + (user._id ? 'update' : 'add'), user, 'POST');\r\n/**\r\n * TODO 删除用户\r\n * @param userId\r\n */\r\nexport const reqDeleteUser = (userId) => http(BASE + '/manage/user/delete',{userId}, 'POST')\r\n\r\n/**\r\n * TODO 获取用户列表\r\n */\r\nexport const reqUserList = () => http(BASE + '/manage/user/list');\r\n\r\n/**\r\n * TODO 获取一级/二级分类的数据\r\n * @param parentId\r\n */\r\nexport const reqCategory = (parentId) => http(BASE + '/manage/category/list', {parentId});\r\n/**\r\n * TODO 添加分类\r\n * @param parentId\r\n * @param categoryName\r\n */\r\nexport const reqAddCategory = ({categoryName, parentId}) => http(BASE + '/manage/category/add', {\r\n    categoryName,\r\n    parentId\r\n}, 'POST');\r\n/**\r\n * TODO 更新分类\r\n * @param categoryId\r\n * @param categoryName\r\n */\r\nexport const reqUpdateCategory = ({categoryId, categoryName}) => http(BASE + '/manage/category/update', {\r\n    categoryId,\r\n    categoryName\r\n}, 'POST');\r\n/**\r\n * TODO 獲取商品分頁列表\r\n * @param pageNum\r\n * @param pageSize\r\n */\r\nexport const reqProducts = (pageNum, pageSize) => http(BASE + '/manage/product/list', {pageNum, pageSize});\r\n/**\r\n * TODO 搜索商品\r\n * @param pageNum\r\n * @param pageSize\r\n * @param searchName\r\n * @param searchType\r\n */\r\nexport const reqSearchProducts = ({pageNum, pageSize, searchType, searchName}) => http(BASE + '/manage/product/search', {\r\n    pageNum,\r\n    pageSize,\r\n    [searchType]: searchName\r\n});\r\n/**\r\n * TODO 添加商品\r\n * @param product\r\n */\r\nexport const reqAddOrUpdateProduct = (product) => http(BASE +'/manage/product/' + (product._id ? 'update' : 'add'), product, \"POST\");\r\n\r\n/**\r\n * TODO 获取一个分类\r\n * @param categoryId\r\n */\r\nexport const reqCategoryId = (categoryId) => http(BASE + '/manage/category/info', {categoryId});\r\n/**\r\n * TODO 商品更新（上架/下架）\r\n * @param productId\r\n * @param status\r\n */\r\nexport const reqUpdateStatus = (productId, status) => http(BASE + '/manage/product/updateStatus', {productId, status}, 'POSt');\r\n/**\r\n * TODO 删除图片\r\n * @param name\r\n */\r\nexport const reqDeleteImg = (name) => http(BASE + '/manage/img/delete', {name}, 'POST');\r\n/**\r\n * TODO 获取角色列表\r\n */\r\nexport const reqRole = () => http(BASE + '/manage/role/list');\r\n/**\r\n * TODO 添加角色\r\n * @param roleName\r\n */\r\nexport const reqAddRole = (roleName) => http(BASE + '/manage/role/add', {roleName}, 'POST');\r\n/**\r\n * TODO 授权\r\n * @param role\r\n */\r\nexport const reqRoleAuth = (role) => http(BASE + '/manage/role/update', role, 'POST');\r\n\r\n/**\r\n *  TODO json请求的接口请求函数\r\n *  @param city\r\n */\r\nexport const reqWeather = (city) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`;\r\n        // 发送jsonp请求\r\n        jsonp(url, {}, (err, data) => {\r\n            // 如果成功了\r\n            if (!err && data.status === 'success') {\r\n                // 取出需要的数据\r\n                const {dayPictureUrl, weather} = data.results[0].weather_data[0];\r\n                resolve({dayPictureUrl, weather})\r\n            } else {\r\n                // 如果失败了\r\n                message.error('获取天气信息失败!')\r\n            }\r\n\r\n        })\r\n    })\r\n};\r\n","/**\r\n * TODO 进行Local数据存储的工具管理模块\r\n */\r\nimport store from 'store';\r\n\r\nconst USER_KEY = 'user_key';\r\n\r\nexport default {\r\n    // 保存用户\r\n    saveUser(user) {\r\n        // localStorage.setItem(USER_KEY, JSON.stringify(user));\r\n        store.set(USER_KEY, user);\r\n    },\r\n    //  获取用户信息\r\n    getUser() {\r\n        // 容错处理\r\n        // return JSON.parse(localStorage.getItem(USER_KEY) || '{}');\r\n        return store.get(USER_KEY) || {};\r\n    },\r\n    //  删除用户信息\r\n    removeUser() {\r\n        // localStorage.removeItem(USER_KEY);\r\n        store.remove(USER_KEY);\r\n    }\r\n}\r\n","/**\r\n * 包含多个action模块\r\n */\r\nimport {SET_HEADER_TITLE, GET_USER, RESET_USER} from './action-types';\r\nimport {reqLogin} from './../api';\r\nimport {message} from 'antd';\r\nimport storageUtils from \"../utils/storageUtils\";\r\n\r\n// 设置头部标题\r\nexport const setHeaderTitle = (headerTitle) => ({\r\n   type: SET_HEADER_TITLE,\r\n   data: headerTitle\r\n});\r\nconst getUser = (user) => ({\r\n   type: GET_USER,\r\n   user\r\n});\r\n\r\n// login TODO\r\nexport const login = (username, password) => {\r\n   return async dispatch => {\r\n      // 1. 发送一部ajax请求\r\n      const result = await reqLogin(username, password);\r\n      if (result.status === 0) {\r\n         // 2. 分发成功的action\r\n         const user = result.data;\r\n         // 将数据保存到本地中\r\n         storageUtils.saveUser(user);\r\n         dispatch(getUser(user));\r\n      } else {\r\n         // 3. 分发失败的action\r\n         const msg = result.msg;\r\n         message.error(msg);\r\n      }\r\n   }\r\n};\r\n\r\nexport const logout = () => {\r\n   storageUtils.removeUser();\r\n   return {type: RESET_USER}\r\n};\r\n","/**\r\n * 常量定义\r\n */\r\nexport const SET_HEADER_TITLE = 'set_header_title';\r\nexport const GET_USER = 'get_user';\r\nexport const RESET_USER = 'reset_user';\r\n","/**\r\n * 登录路由\r\n */\r\nimport React, {Component} from 'react';\r\nimport {Form, Input, Icon, Button} from 'antd';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {login} from './../../redux/actions';\r\nimport './login.less';\r\n\r\nclass Login extends Component {\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err, values) => {\r\n            if (!err) {\r\n                const {username, password} = values;\r\n                this.props.login(username, password);\r\n            } else console.log(err);\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        // 判断用户是否登录\r\n        const user = this.props.user;\r\n        if (user && user._id) return <Redirect to='/home' />;\r\n\r\n        const {getFieldDecorator} = this.props.form;\r\n        return (\r\n            <div className=\"main\">\r\n                <header className=\"header\">\r\n                    <h1>后台登录系统</h1>\r\n                </header>\r\n                <div className=\"container\">\r\n                    <section className='login-container'>\r\n                        <h2>用户登录</h2>\r\n                        <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                            <Form.Item>\r\n                                {getFieldDecorator('username', {\r\n                                    rules: [\r\n                                        {required: true, whiteSpace: true, message: '请输入用户名'},\r\n                                        {min: 4, message: '用户名至少为4位'},\r\n                                        {max: 12, message: '用户名最多12位'},\r\n                                        {pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是字母，数字下划线组成'}\r\n                                    ],\r\n                                    initialValue: 'admin'\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                                        placeholder=\"Username\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('password', {\r\n                                    rules: [\r\n                                        {required: true, whiteSpace: true, message: '请输入密码'},\r\n                                        {min: 5, message: '密码至少为五位'},\r\n                                        {max: 12, message: '密码最多12位'}\r\n                                    ],\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button btn\">\r\n                                    Log in\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst wrapperLogin = Form.create({name: 'login'})(Login);\r\nexport default connect(\r\n    state => ({user: state.user}),\r\n    {login}\r\n)(wrapperLogin);\r\n","const menuList = [\r\n    {\r\n        title: '首页', // 菜单标题名称\r\n        key: '/home', // 对应的 path\r\n        icon: 'home', // 图标名称\r\n        isPublic: true\r\n    },\r\n    {\r\n        title: '商品',\r\n        key: '/products',\r\n        icon: 'appstore',\r\n        children: [ // 子菜单列表\r\n            {\r\n                title: '品类管理',\r\n                key: '/category',\r\n                icon: 'bars'\r\n            },\r\n            {\r\n                title: '商品管理',\r\n                key: '/product',\r\n                icon: 'tool'\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: '用户管理',\r\n        key: '/user',\r\n        icon: 'user'\r\n    },\r\n    {\r\n        title: '角色管理',\r\n        key: '/role',\r\n        icon: 'safety',\r\n    },\r\n    {\r\n        title: '图形图表',\r\n        key: '/charts',\r\n        icon: 'area-chart',\r\n        children: [\r\n            {\r\n                title: '柱形图',\r\n                key: '/charts/bar',\r\n                icon: 'bar-chart'\r\n            },\r\n            {\r\n                title: '折线图',\r\n                key: '/charts/line',\r\n                icon: 'line-chart'\r\n            },\r\n            {\r\n                title: '饼图',\r\n                key: '/charts/pie',\r\n                icon: 'pie-chart'\r\n            },\r\n        ]\r\n    },\r\n];\r\nexport default menuList;\r\n","import React, {Component} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {setHeaderTitle} from './../../redux/actions';\r\nimport {Icon, Menu} from 'antd';\r\nimport menuList from '../../config/menuConfig';\r\nimport './leftnav.less'\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n\r\n/*\r\n左侧导航的组件\r\n */\r\nclass LeftNav extends Component {\r\n\r\n    /*\r\n    根据menu的数据数组生成对应的标签数组\r\n    使用map() + 递归调用\r\n    */\r\n    // TODO 用户权限判断\r\n    hasAuth = (item) => {\r\n        const {isPublic, key} = item;\r\n        const menus = this.props.user.role.menus;\r\n        const username = this.props.user.username;\r\n        // 1. 当前用户是admin\r\n        // 2. 用户没有权限，只能看到首页\r\n        // 3. 用户有该权限，显示对应权限列表\r\n        // 4. 用户拥有该权限，并拥有该权限的子项\r\n        if (username === 'admin' || isPublic || menus.indexOf(key) !== -1) return true;\r\n        else if (item.children) return !!item.children.find(child => menus.indexOf(child.key) !== -1);\r\n        return false;\r\n\r\n    };\r\n\r\n    getMenuNodes= (menuList) => {\r\n        // 得到当前请求的路由路径\r\n        const path = this.props.location.pathname;\r\n        return menuList.map(item => {\r\n            if (this.hasAuth(item)) {\r\n                if (!item.children) {\r\n                    if (item.key === path || path.indexOf(item.key) === 0) {\r\n                        this.props.setHeaderTitle(item.title);\r\n                    }\r\n                    return (\r\n                        <Menu.Item key={item.key}>\r\n                            <Link to={item.key} onClick={() => this.props.setHeaderTitle(item.title)}>\r\n                                <Icon type={item.icon}/>\r\n                                <span>{item.title}</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    )\r\n                } else {\r\n                    // 查找一个与当前请求路径匹配的子Item\r\n                    const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0);\r\n                    // 如果存在, 说明当前item的子列表需要打开\r\n                    if (cItem) {\r\n                        this.openKey = item.key\r\n                    }\r\n\r\n                    return (\r\n                        <SubMenu\r\n                            key={item.key}\r\n                            title={\r\n                                <span>\r\n              <Icon type={item.icon}/>\r\n              <span>{item.title}</span>\r\n            </span>\r\n                            }\r\n                        >\r\n                            {this.getMenuNodes(item.children)}\r\n                        </SubMenu>\r\n                    )\r\n                }\r\n            }\r\n        })\r\n    };\r\n\r\n    /*\r\n    在第一次render()之前执行一次\r\n    为第一个render()准备数据(必须同步的)\r\n     */\r\n    componentWillMount () {\r\n        this.menuNodes = this.getMenuNodes(menuList);\r\n    }\r\n\r\n    render() {\r\n        // debugger\r\n        // 得到当前请求的路由路径\r\n        let path = this.props.location.pathname;\r\n        if (path.indexOf('/product') === 0) {  // TODO 解决点击商品子路由时，侧边栏选中失败\r\n            path = '/product';\r\n        }\r\n        // 得到需要打开菜单项的key\r\n        const openKey = this.openKey;\r\n\r\n        return (\r\n            <div className=\"left-container\">\r\n                <Link to='/'>\r\n                    <div className='left-logo' />\r\n                </Link>\r\n\r\n                <Menu\r\n                    mode=\"inline\"\r\n                    theme=\"dark\"\r\n                    selectedKeys={[path]}\r\n                    defaultOpenKeys={[openKey]}\r\n                >\r\n\r\n                    {\r\n                        this.menuNodes\r\n                    }\r\n\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\nwithRouter高阶组件:\r\n包装非路由组件, 返回一个新的组件\r\n新的组件向非路由组件传递3个属性: history/location/match\r\n */\r\nexport default connect(\r\n    state => ({user: state.user}),\r\n    {setHeaderTitle}\r\n)(withRouter(LeftNav));\r\n","import React from 'react'\r\nimport './index.less'\r\n/*\r\n外形像链接的按钮\r\n */\r\nexport default function LinkButton(props) {\r\n  return <button {...props} className=\"link-button\"></button>\r\n}","/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from './../../redux/actions';\r\nimport {Modal} from 'antd';\r\n\r\nimport LinkButton from '../link-button';\r\nimport {reqWeather} from '../../api';\r\nimport {formateDate} from '../../utils/dateUtils';\r\nimport './topnav.less';\r\n\r\n/*\r\n左侧导航的组件\r\n */\r\nclass TopNav extends Component {\r\n\r\n    state = {\r\n        currentTime: formateDate(Date.now()), // 当前时间字符串\r\n        dayPictureUrl: '', // 天气图片url\r\n        weather: '', // 天气的文本\r\n    };\r\n\r\n    // TODO 设置时间\r\n    getTime = () => {\r\n        // 每隔1s获取当前时间, 并更新状态数据currentTime\r\n        this.intervalId = setInterval(() => {\r\n            const currentTime = formateDate(Date.now());\r\n            this.setState({currentTime})\r\n        }, 1000)\r\n    };\r\n\r\n    // TODO 获取天气\r\n    getWeather = async () => {\r\n        // 调用接口请求异步获取数据\r\n        const {dayPictureUrl, weather} = await reqWeather('北京');\r\n        // 更新状态\r\n        this.setState({dayPictureUrl, weather})\r\n    };\r\n\r\n    // TODO 退出登录\r\n    logout = () => {\r\n        // 显示确认框\r\n        Modal.confirm({\r\n            content: '确定退出吗?',\r\n            okText: '确定',\r\n            cancelText: '取消',\r\n            onOk: () => {\r\n                // 删除保存的user数据\r\n                this.props.logout();\r\n            }\r\n        })\r\n    };\r\n\r\n    /*\r\n    第一次render()之后执行一次\r\n    一般在此执行异步操作: 发ajax请求/启动定时器\r\n     */\r\n    componentDidMount() {\r\n        // 获取当前的时间\r\n        this.getTime();\r\n        // 获取当前天气\r\n        this.getWeather()\r\n    }\r\n\r\n    /*\r\n    当前组件卸载之前调用\r\n     */\r\n    componentWillUnmount() {\r\n        // 清除定时器\r\n        clearInterval(this.intervalId)\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {currentTime, dayPictureUrl, weather} = this.state;\r\n\r\n        const username = this.props.user.username;\r\n\r\n        // 得到当前需要显示的title\r\n        const title = this.props.headerTitle;\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header-top\">\r\n                    <span>欢迎, {username}</span>\r\n                    <LinkButton onClick={this.logout}>退出</LinkButton>\r\n                </div>\r\n                <div className=\"header-bottom\">\r\n                    <div className=\"header-bottom-left\">{title}</div>\r\n                    <div className=\"header-bottom-right\">\r\n                        <span>{currentTime}</span>\r\n                        <img src={dayPictureUrl} alt=\"weather\"/>\r\n                        <span>{weather}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        headerTitle: state.headerTitle,\r\n        user: state.user\r\n    }),\r\n    {logout}\r\n)(withRouter(TopNav));\r\n","import React from \"react\"\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Legend,\r\n} from \"bizcharts\"\r\nimport DataSet from \"@antv/data-set\"\r\n\r\nexport default class Line extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        month: \"Jan\",\r\n        a: 7.0,\r\n        b: 3.9,\r\n        c: 5.9\r\n      },\r\n      {\r\n        month: \"Feb\",\r\n        a: 6.9,\r\n        b: 4.2,\r\n        c: 1.9\r\n      },\r\n      {\r\n        month: \"Mar\",\r\n        a: 9.5,\r\n        b: 5.7,\r\n        c: 3.9\r\n      },\r\n      {\r\n        month: \"Apr\",\r\n        a: 14.5,\r\n        b: 8.5,\r\n        c: 5.5\r\n      },\r\n      {\r\n        month: \"May\",\r\n        a: 18.4,\r\n        b: 11.9,\r\n        c: 8.9\r\n      },\r\n      {\r\n        month: \"Jun\",\r\n        a: 21.5,\r\n        b: 15.2,\r\n        c: 10.0\r\n      },\r\n      {\r\n        month: \"Jul\",\r\n        a: 25.2,\r\n        b: 17.0,\r\n        c: 12.9\r\n      },\r\n      {\r\n        month: \"Aug\",\r\n        a: 26.5,\r\n        b: 16.6,\r\n        c: 15.9\r\n      },\r\n      {\r\n        month: \"Sep\",\r\n        a: 23.3,\r\n        b: 14.2,\r\n        c: 20.7\r\n      },\r\n      {\r\n        month: \"Oct\",\r\n        a: 18.3,\r\n        b: 10.3,\r\n        c: 25.9\r\n      },\r\n      {\r\n        month: \"Nov\",\r\n        a: 13.9,\r\n        b: 6.6,\r\n        c: 30.9\r\n      },\r\n      {\r\n        month: \"Dec\",\r\n        a: 9.6,\r\n        b: 4.8,\r\n        c: 35.9\r\n      }\r\n    ];\r\n    const ds = new DataSet();\r\n    const dv = ds.createView().source(data);\r\n    dv.transform({\r\n      type: \"fold\",\r\n      fields: [\"a\", \"b\", \"c\"],\r\n      // 展开字段集\r\n      key: \"city\",\r\n      // key字段\r\n      value: \"temperature\" // value字段\r\n    });\r\n    const cols = {\r\n      month: {\r\n        range: [0, 1]\r\n      }\r\n    };\r\n    return (\r\n      <div style={{float: 'right', width: 750, height: 300}}>\r\n        <Chart height={250} data={dv} scale={cols} forceFit>\r\n          <Legend/>\r\n          <Axis name=\"month\"/>\r\n          <Axis\r\n            name=\"temperature\"\r\n            label={{\r\n              formatter: val => `${val}万个`\r\n            }}\r\n          />\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom\r\n            type=\"line\"\r\n            position=\"month*temperature\"\r\n            size={2}\r\n            color={\"city\"}\r\n            shape={\"smooth\"}\r\n          />\r\n          <Geom\r\n            type=\"point\"\r\n            position=\"month*temperature\"\r\n            size={4}\r\n            shape={\"circle\"}\r\n            color={\"city\"}\r\n            style={{\r\n              stroke: \"#fff\",\r\n              lineWidth: 1\r\n            }}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n} from \"bizcharts\"\r\n\r\nexport default class Bar extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        year: \"1月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"2月\",\r\n        sales: 52\r\n      },\r\n      {\r\n        year: \"3月\",\r\n        sales: 61\r\n      },\r\n      {\r\n        year: \"4月\",\r\n        sales: 145\r\n      },\r\n      {\r\n        year: \"5月\",\r\n        sales: 48\r\n      },\r\n      {\r\n        year: \"6月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"7月\",\r\n        sales: 28\r\n      },\r\n      {\r\n        year: \"8月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"59月\",\r\n        sales: 68\r\n      },\r\n      {\r\n        year: \"10月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"11月\",\r\n        sales: 58\r\n      },\r\n      {\r\n        year: \"12月\",\r\n        sales: 38\r\n      }\r\n    ];\r\n    const cols = {\r\n      sales: {\r\n        tickInterval: 20\r\n      }\r\n    };\r\n    return (\r\n      <div style={{width: '100%', marginLeft: -30}}>\r\n        <Chart height={338} data={data} scale={cols} forceFit>\r\n          <Axis name=\"year\"/>\r\n          <Axis name=\"sales\"/>\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom type=\"interval\" position=\"year*sales\"/>\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {\r\n  Icon,\r\n  Card,\r\n  Statistic,\r\n  DatePicker,\r\n  Timeline\r\n} from 'antd'\r\nimport moment from 'moment'\r\n\r\nimport Line from './Line'\r\nimport Bar from './Bar'\r\nimport './home.less'\r\n\r\nconst dateFormat = 'YYYY/MM/DD';\r\nconst {RangePicker} = DatePicker;\r\n\r\nexport default class Home extends Component {\r\n\r\n  state = {\r\n    isVisited: true\r\n  };\r\n\r\n  handleChange = (isVisited) => {\r\n    return () => this.setState({isVisited})\r\n  };\r\n\r\n  render() {\r\n    const {isVisited} = this.state;\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Card\r\n          className=\"home-card\"\r\n          title=\"商品总量\"\r\n          extra={<Icon style={{color: 'rgba(0,0,0,.45)'}} type=\"question-circle\"/>}\r\n          style={{width: 250}}\r\n          headStyle={{color: 'rgba(0,0,0,.45)'}}\r\n        >\r\n          <Statistic\r\n            value={1128163}\r\n            suffix=\"个\"\r\n            style={{fontWeight: 'bolder'}}\r\n          />\r\n          <Statistic\r\n            value={15}\r\n            valueStyle={{fontSize: 15}}\r\n            prefix={'周同比'}\r\n            suffix={<div>%<Icon style={{color: 'red', marginLeft: 10}} type=\"arrow-down\"/></div>}\r\n          />\r\n          <Statistic\r\n            value={10}\r\n            valueStyle={{fontSize: 15}}\r\n            prefix={'日同比'}\r\n            suffix={<div>%<Icon style={{color: '#3f8600', marginLeft: 10}} type=\"arrow-up\"/></div>}\r\n          />\r\n        </Card>\r\n\r\n        <Line/>\r\n\r\n        <Card\r\n          className=\"home-content\"\r\n          title={<div className=\"home-menu\">\r\n            <span className={isVisited ? \"home-menu-active home-menu-visited\" : 'home-menu-visited'}\r\n                  onClick={this.handleChange(true)}>访问量</span>\r\n            <span className={isVisited ? \"\" : 'home-menu-active'} onClick={this.handleChange(false)}>销售量</span>\r\n          </div>}\r\n          extra={<RangePicker\r\n            defaultValue={[moment('2019/01/01', dateFormat), moment('2019/06/01', dateFormat)]}\r\n            format={dateFormat}\r\n          />}\r\n        >\r\n          <Card\r\n            className=\"home-table-left\"\r\n            title={isVisited ? '访问趋势' : '销售趋势'}\r\n            bodyStyle={{padding: 0, height: 275}}\r\n            extra={<Icon type=\"reload\"/>}\r\n          >\r\n            <Bar/>\r\n          </Card>\r\n\r\n          <Card title='任务' extra={<Icon type=\"reload\"/>} className=\"home-table-right\">\r\n            <Timeline>\r\n              <Timeline.Item color=\"green\">新版本迭代会</Timeline.Item>\r\n              <Timeline.Item color=\"green\">完成网站设计初版</Timeline.Item>\r\n              <Timeline.Item color=\"red\">\r\n                <p>联调接口</p>\r\n                <p>功能验收</p>\r\n              </Timeline.Item>\r\n              <Timeline.Item>\r\n                <p>登录功能设计</p>\r\n                <p>权限验证</p>\r\n                <p>页面排版</p>\r\n              </Timeline.Item>\r\n            </Timeline>\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {\r\n    Form,\r\n    Select,\r\n    Input\r\n} from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Item = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass AddForm extends Component {\r\n\r\n    static propTypes = {\r\n        category: PropTypes.array.isRequired,\r\n        parentId: PropTypes.string.isRequired,\r\n        setForm: PropTypes.func.isRequired\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.props.setForm(this.props.form);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {category, parentId} = this.props;\r\n        const {getFieldDecorator} = this.props.form;\r\n\r\n        return (\r\n            <Form>\r\n                <Item label='分类列表'>\r\n                {\r\n                    getFieldDecorator('parentId',{\r\n                        initialValue: parentId\r\n                    })(\r\n                            <Select>\r\n                                <Option value='0'>一级分类</Option>\r\n                                {\r\n                                    category.map(item => <Option value={item._id} key={item._id}>{item.name}</Option>)\r\n                                }\r\n                            </Select>\r\n\r\n                    )\r\n                }\r\n                </Item>\r\n\r\n                <Item label='分类名称'>\r\n                {\r\n                    getFieldDecorator('categoryName')(\r\n                            <Input placeholder='请输入分类名称' />\r\n                    )\r\n                }\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create({})(AddForm);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Form,\r\n    Input\r\n} from 'antd';\r\n\r\n\r\nconst Item = Form.Item;\r\n\r\nclass UpdateForm extends Component {\r\n\r\n    static propTypes = {\r\n        categoryName: PropTypes.string.isRequired,\r\n        setForm: PropTypes.func.isRequired\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.props.setForm(this.props.form);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {categoryName} = this.props;\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form>\r\n                <Item label='分类名称'>\r\n                {\r\n                    getFieldDecorator('categoryName', {\r\n                        initialValue: categoryName\r\n                    })(\r\n                            <Input placeholder='请输入分类名称'/>\r\n                    )\r\n                }\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create()(UpdateForm);\r\n","import React, {Component} from 'react';\r\nimport {Card, Table, Button, Icon, Divider, message, Modal} from 'antd';\r\nimport AddForm from './AddForm';\r\nimport UpdateForm from './UpdateForm';\r\nimport LinkButton from './../../components/link-button';\r\nimport {reqCategory, reqUpdateCategory, reqAddCategory} from './../../api';\r\n\r\n/**\r\n * TODO 商品分类路由\r\n */\r\nclass Category extends Component {\r\n\r\n    state = {\r\n        category: [],  // 一级分类列表\r\n        subCategorys: [], // 二级分类列表\r\n        loading: false,\r\n        parentId: '0',  // 分类的ID\r\n        parentName: '', // 分类名字\r\n        status: 0   // 确认框状态，影藏为0， 添加为1，更新为2\r\n    };\r\n\r\n    // 初始化列数\r\n    initColumn = () => {\r\n        this.columns = [\r\n            {\r\n                title: '分类名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                width: 400,\r\n                render: (category) => (\r\n                    <span>\r\n                          <LinkButton\r\n                              onClick={() => {this.update(category)}}\r\n                          >\r\n                              修改分类\r\n                          </LinkButton>\r\n                        {\r\n                            this.state.parentId === '0'\r\n                                ? (<span>\r\n                                    <Divider type=\"vertical\"/>\r\n                                    <LinkButton\r\n                                        onClick={() => {this.showSubCategory(category)}}\r\n                                    >\r\n                                        查看子分类\r\n                                    </LinkButton>\r\n                                </span>)\r\n                                : null\r\n                        }\r\n                    </span>\r\n                ),\r\n            }\r\n        ];\r\n    };\r\n\r\n    // TODO 获取分类数据\r\n    getCategory = async (parentId) => {\r\n        // 请求前\r\n        this.setState({loading: true});\r\n        parentId = parentId || this.state.parentId;\r\n        const data = await reqCategory(parentId);\r\n        if (data.status === 0) {\r\n            this.setState({loading: false});\r\n            const category = data.data;\r\n            console.log(category);\r\n            // 获取一级分类的数据\r\n            if (parentId === '0') this.setState({category});\r\n            // 获取二级分类数据\r\n            else this.setState({subCategorys: category});\r\n        } else {\r\n            message.error('获取分类信息失败');\r\n        }\r\n    };\r\n\r\n    // 显示二级数据\r\n    showSubCategory = (category) => {\r\n        // 更新二级列表的数据\r\n        this.setState({\r\n            parentId: category._id,\r\n            parentName: category.name\r\n        }, () => {\r\n            // 获取二级列表\r\n            this.getCategory();\r\n        });\r\n    };\r\n    // 显示一级数据\r\n    showCategory = () => {\r\n        this.setState({\r\n            parentId: '0',\r\n            parentName: '',\r\n            subCategorys: []\r\n        })\r\n    };\r\n\r\n    // TODO 关闭模态框\r\n    handleCancel = () => {\r\n        this.setState({status: 0});\r\n    };\r\n\r\n    // TODO 添加分类\r\n    add = () => { this.setState({status: 1}); };\r\n    addCategory = async () => {\r\n        this.handleCancel();\r\n        const {parentId, categoryName} = this.form.getFieldsValue();\r\n        const result = await reqAddCategory({categoryName, parentId});\r\n        if (result.status === 0){\r\n            message.success('添加分類成功');\r\n            this.getCategory();\r\n        }\r\n    };\r\n\r\n    // TODO 更新分类\r\n    update = (category) => {\r\n        // 保存分类对象\r\n        this.categoryName = category;\r\n        // 更新状态\r\n        this.setState({status: 2});\r\n    };\r\n    updateCategory = async () => {\r\n        // 隐藏模态框\r\n        this.handleCancel();\r\n        // 数据准备\r\n        const categoryId = this.categoryName._id;\r\n        const categoryName = this.form.getFieldValue('categoryName');\r\n        // 发送请求\r\n        const result = await reqUpdateCategory({categoryId, categoryName});\r\n        if (result.status === 0) {\r\n               message.success('更新分類成功');\r\n               // 重新渲染数据\r\n               this.getCategory();\r\n        }\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.initColumn();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCategory();\r\n    }\r\n\r\n    render() {\r\n        const {category, loading, subCategorys, parentId, parentName, status} = this.state;\r\n        const  categoryName = this.categoryName || {};\r\n        const title = parentId === '0' ? '一级分类' : (\r\n            <span>\r\n                <LinkButton onClick={this.showCategory}>一级分类</LinkButton>\r\n                <Divider type=\"vertical\"/>\r\n                <span>{parentName}</span>\r\n            </span>\r\n        );\r\n        const extra = (\r\n            <Button type='primary' onClick={this.add}>\r\n                <Icon type='plus'/>\r\n                添加分类\r\n            </Button>\r\n        );\r\n        return (\r\n            <Card\r\n                title={title}\r\n                extra={extra}\r\n            >\r\n                <Table\r\n                    dataSource={parentId === '0' ? category : subCategorys}\r\n                    columns={this.columns}\r\n                    bordered\r\n                    loading={loading}\r\n                    pagination={{defaultPageSize: 5, showQuickJumper: true}}\r\n                    rowKey='_id'\r\n                />\r\n\r\n                {/* TODO 模态框 清除緩存數據 */}\r\n                {\r\n                    status &&\r\n                    <Modal\r\n                        title=\"添加分类\"\r\n                        visible={status === 1}\r\n                        onOk={this.addCategory}\r\n                        onCancel={this.handleCancel}\r\n                        okText=\"确认\"\r\n                        cancelText=\"取消\"\r\n                    >\r\n                        <AddForm\r\n                            category={category}\r\n                            parentId={parentId}\r\n                            setForm={(form) => this.form = form}\r\n                        />\r\n                    </Modal>\r\n                }\r\n                {\r\n                    status &&\r\n                    <Modal\r\n                        title=\"更新分类\"\r\n                        visible={status === 2}\r\n                        onOk={this.updateCategory}\r\n                        onCancel={this.handleCancel}\r\n                        okText=\"确认\"\r\n                        cancelText=\"取消\"\r\n                    >\r\n                        <UpdateForm\r\n                            categoryName={categoryName.name}\r\n                            setForm={(form) => {this.form =form}}\r\n                        />\r\n                    </Modal>\r\n                }\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Category;\r\n","/*\r\n* 包含一些常量值\r\n* */\r\nexport const PAGE_SIZE = 3; // 分页展示数据\r\nexport const BASE_IMG_URL = 'http://localhost:5000/upload/'; // 基础图片路径\r\n","/**\r\n * TODO 产品\r\n */\r\nexport default {\r\n    product: {}\r\n}\r\n","import React, {Component} from 'react';\r\nimport {\r\n    Select,\r\n    Card,\r\n    Table,\r\n    Icon,\r\n    Button,\r\n    Input,\r\n    Divider,\r\n    message\r\n} from 'antd';\r\nimport LinkButton from './../../components/link-button';\r\nimport {reqProducts, reqSearchProducts, reqUpdateStatus} from './../../api';\r\nimport {PAGE_SIZE} from './../../utils/constants';\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst Options = Select.Option;\r\n\r\nclass ProductHome extends Component {\r\n\r\n    state = {\r\n        products: [],\r\n        total: 0,\r\n        loading: false,\r\n        searchName: '',  // 搜索的內容\r\n        searchType: 'productName' // 搜索的類型\r\n    };\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: '商品名称',\r\n                dataIndex: 'name',\r\n            },\r\n            {\r\n                title: '商品描述',\r\n                dataIndex: 'desc',\r\n            },\r\n            {\r\n                title: '价格',\r\n                dataIndex: 'price',\r\n                render: (price) => '¥' + price  // 当前指定了对应的属性, 传入的是对应的属性值\r\n            },\r\n            {\r\n                width: 200,\r\n                title: '状态',\r\n                // dataIndex: 'status',\r\n                render: (product) => {\r\n                    const {status, _id} = product;\r\n                    const newStatus = status === 1 ? 2 : 1;\r\n                    return (\r\n                        <span>\r\n                            <Button type='primary' onClick={() => {this.updateStatus(_id, newStatus)}}>{status === 1 ? '下架' : '上架'}</Button>\r\n                            <Divider type='vertical' />\r\n                            <span>{status === 1 ? '在售' : '已下架'}</span>\r\n                        </span>)\r\n                }\r\n            },\r\n            {\r\n                width: 150,\r\n                title: '操作',\r\n                render: (product) => {\r\n                    return (<span>\r\n                      {/*将product对象使用state传递给目标路由组件*/}\r\n                      <LinkButton onClick={() => this.showDetails(product)}>详情</LinkButton>\r\n                       <Divider type='vertical' />\r\n                      <LinkButton onClick={() => this.showUpdate(product)}>修改</LinkButton>\r\n                    </span>\r\n                    )\r\n                }\r\n            },\r\n        ];\r\n    };\r\n\r\n    showDetails = (product) => {\r\n        // TODO 缓存product\r\n        memoryUtils.product = product;\r\n        this.props.history.push('/product/details');\r\n    };\r\n    showUpdate = (product) => {\r\n        memoryUtils.product = product;\r\n        this.props.history.push('/product/add');\r\n    };\r\n\r\n\r\n    // TODO 获取商品，搜索商品分页显示\r\n\r\n    getProducts = async (pageNum) => {\r\n        this.pageNum = pageNum;\r\n        let result;\r\n        this.setState({loading: true});\r\n        const {searchName, searchType} = this.state;\r\n        if (searchName) {\r\n            //  搜索数据渲染\r\n            result = await reqSearchProducts({pageNum, pageSize: PAGE_SIZE, searchType, searchName});\r\n        } else {\r\n            // 数据渲染\r\n            result = await reqProducts(pageNum, PAGE_SIZE);\r\n        }\r\n\r\n        // 取出分页数据，更新状态，显示分页列表\r\n        if (result.status === 0) {\r\n            const {list, total} = result.data;\r\n            this.setState({\r\n                products: list,\r\n                total,\r\n                loading: false\r\n            })\r\n        }\r\n    };\r\n\r\n    // 更新指定商品的状态\r\n    updateStatus = async (productId, status) => {\r\n        const result = await reqUpdateStatus(productId, status);\r\n        if (result.status === 0) {\r\n            message.success('商品状态更新成功');\r\n            this.getProducts(this.pageNum);\r\n        }\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.initColumns();\r\n    }\r\n    componentDidMount() {\r\n        this.getProducts();\r\n    }\r\n\r\n    render() {\r\n        const {products, total, loading, searchType, searchName} = this.state;\r\n        const title = (\r\n            <span>\r\n                <Select\r\n                    value={searchType}\r\n                    onChange={value => {this.setState({searchType: value})}}\r\n                >\r\n                    <Options value='productName'>按名称搜索</Options>\r\n                    <Options value='productDesc'>按描述搜索</Options>\r\n                </Select>\r\n                <Input\r\n                    placeholder='关键字'\r\n                    style={{width: 300, margin: '0 10px'}}\r\n                    value={searchName}\r\n                    onChange={event => {this.setState({searchName: event.target.value})}}\r\n                />\r\n                <Button type='primary' onClick={() => this.getProducts(1)}>\r\n                    <Icon type='search'/>\r\n                    搜索\r\n                </Button>\r\n            </span>\r\n        );\r\n        const extra = (\r\n            <Button type='primary' onClick={() =>this.props.history.push('/product/add')} >\r\n                <Icon type='plus'/>\r\n                添加商品\r\n            </Button>\r\n        );\r\n        return (\r\n            <Card title={title} extra={extra}>\r\n                <Table\r\n                    dataSource={products}\r\n                    columns={this.columns}\r\n                    bordered\r\n                    pagination={{\r\n                        current: this.pageNum,\r\n                        total,\r\n                        defaultPageSize: PAGE_SIZE,\r\n                        showQuickJumper: true,\r\n                        onChange: this.getProducts\r\n                    }}\r\n                    rowKey='_id'\r\n                    loading={loading}\r\n                />\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductHome;\r\n","import React, {Component} from 'react';\r\nimport { Upload, Icon, Modal, message } from 'antd';\r\nimport {reqDeleteImg} from './../../api';\r\nimport PropsType from 'prop-types';\r\nimport {BASE_IMG_URL} from \"../../utils/constants\";\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\n/*\r\n* TODO 图片上传组件\r\n* */\r\nclass PictureWall extends Component {\r\n\r\n    static propTypes = {\r\n        imgs: PropsType.array\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        const {imgs} = this.props;\r\n        let fileList = [];\r\n        if (imgs && imgs.length > 0) {\r\n            fileList = imgs.map((img, index) => ({\r\n                uid: -index, // 文件唯一ID\r\n                name: img, // 文件名status: 'done', // 上传状态\r\n                url: BASE_IMG_URL + img,\r\n                status: 'done'\r\n            }))\r\n        }\r\n        this.state = {\r\n            previewVisible: false,\r\n            previewImage: '',\r\n            fileList\r\n        }\r\n    }\r\n\r\n    handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n    handlePreview = async file => {\r\n        // 显示指定file对应的大图\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n\r\n        this.setState({\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n        });\r\n    };\r\n\r\n    // TODO 图片上传\r\n    handleChange = async ({ file, fileList }) => {\r\n        if (file.status === 'done') {\r\n            const result = file.response;\r\n            if (result.status === 0) {\r\n                message.success('图片上传成功');\r\n                const {name, url} = result.data;\r\n                file = fileList[fileList.length -1];\r\n                file.name = name;\r\n                file.url = url;\r\n            } else message.error('图片上传失败');\r\n        } else if (file.status === 'removed') {\r\n            // 删除图片\r\n            const result = await reqDeleteImg(file.name);\r\n            if (result.status === 0) message.success('删除图片成功');\r\n            else message.error('删除图片失败');\r\n        }\r\n        this.setState({ fileList })\r\n    };\r\n    // 获取所有已上传的图片数组\r\n    getImgs = () => {\r\n      return this.state.fileList.map(file => file.name);\r\n    };\r\n\r\n    render() {\r\n        const { previewVisible, previewImage, fileList } = this.state;\r\n        const uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" />\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n        return (\r\n            <div className=\"clearfix\">\r\n                <Upload\r\n                    accept='image/*' /*只接受图片格式*/\r\n                    name='image'\r\n                    action='/manage/img/upload'\r\n                    listType=\"picture-card\"\r\n                    fileList={fileList}\r\n                    onPreview={this.handlePreview}\r\n                    onChange={this.handleChange}\r\n                >\r\n                    {/*TODO 上传图片限制*/}\r\n                    {fileList.length >= 4 ? null : uploadButton}\r\n                </Upload>\r\n                <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n                    <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PictureWall;\r\n","import React, { Component } from 'react';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport PropTypes from 'prop-types';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\n\r\n\r\nclass RichTextEditor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const html = this.props.detail;\r\n        if (html) {\r\n            const contentBlock = htmlToDraft(html);\r\n            if (contentBlock) {\r\n                const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n                const editorState = EditorState.createWithContent(contentState);\r\n                this.state = {\r\n                    editorState\r\n                };\r\n            }\r\n        } else {\r\n            this.state = {\r\n                editorState: EditorState.createEmpty()\r\n            }\r\n        }\r\n    }\r\n    static propTypes = {\r\n        detail: PropTypes.string\r\n    };\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState,\r\n        });\r\n    };\r\n\r\n    // 将数据传递给父组件\r\n    getDetail = () => {\r\n        // 返回输入数据对应的html格式的文本\r\n        return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n    };\r\n\r\n\r\n    // 编辑器中上传图片\r\n     uploadImageCallBack = (file) => {\r\n        return new Promise(\r\n            (resolve, reject) => {\r\n                const xhr = new XMLHttpRequest();\r\n                xhr.open('POST', '/manage/img/upload');\r\n                const data = new FormData();\r\n                data.append('image', file);\r\n                xhr.send(data);\r\n                xhr.addEventListener('load', () => {\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    const url = response.data.url; // 得到图片地址\r\n                    resolve({data: {link: url}});\r\n                });\r\n                xhr.addEventListener('error', () => {\r\n                    const error = JSON.parse(xhr.responseText);\r\n                    reject(error);\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { editorState } = this.state;\r\n        return (\r\n                    <Editor\r\n                        editorStyle={{border: '1px solid #000', minHeight: 300, paddingLeft: 10}}\r\n                        editorState={editorState}\r\n                        onEditorStateChange={this.onEditorStateChange}\r\n                        toolbar={{\r\n                            image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } }\r\n                        }}\r\n                    />\r\n        );\r\n    }\r\n}\r\nexport default RichTextEditor;\r\n","import React, {PureComponent} from 'react';\r\nimport {\r\n    Card,\r\n    Icon,\r\n    Form,\r\n    Input,\r\n    Cascader,\r\n    Button,\r\n    message\r\n} from 'antd';\r\nimport LinkButton from './../../components/link-button';\r\nimport PictureWall from './PictureWall';\r\nimport RichTextEditor from './RichTextEditor';\r\nimport {reqCategory, reqAddOrUpdateProduct} from './../../api';\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst {Item} = Form;\r\nconst {TextArea} = Input;\r\n\r\n\r\nclass ProductAddUpdate extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.pw = React.createRef();\r\n        this.ed = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        options: []\r\n    };\r\n\r\n\r\n    // 自定义校验规则\r\n    validatorPrice = (rule, value, callback) => {\r\n        if (value * 1 > 0) callback();\r\n        else callback('价格必须大于0');\r\n\r\n    };\r\n    // TODO 提交数据\r\n    submit = () => {\r\n        // 进行表单验证, 如果通过了, 才发送请求\r\n        this.props.form.validateFields(async (error, values) => {\r\n            if (!error) {\r\n\r\n                // 1. 收集数据, 并封装成product对象\r\n                const {name, desc, price, categoryIds} = values;\r\n                let pCategoryId, categoryId;\r\n                if (categoryIds.length===1) {\r\n                    pCategoryId = '0';\r\n                    categoryId = categoryIds[0]\r\n                } else {\r\n                    pCategoryId = categoryIds[0];\r\n                    categoryId = categoryIds[1]\r\n                }\r\n                const imgs = this.pw.current.getImgs();\r\n                const detail = this.ed.current.getDetail();\r\n\r\n                const product = {name, desc, price, imgs, detail, pCategoryId, categoryId};\r\n\r\n                // 如果是更新, 需要添加_id\r\n                if(this.isUpdate) {\r\n                    product._id = this.product._id\r\n                }\r\n\r\n                // 2. 调用接口请求函数去添加/更新\r\n                const result = await reqAddOrUpdateProduct(product);\r\n\r\n                // 3. 根据结果提示\r\n                if (result.status===0) {\r\n                    message.success(`${this.isUpdate ? '更新' : '添加'}商品成功!`);\r\n                    this.props.history.goBack()\r\n                } else {\r\n                    message.error(`${this.isUpdate ? '更新' : '添加'}商品失败!`)\r\n                }\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n    // TODO 初始化级联数据\r\n    initOptions = async (category) => {\r\n        const options = category.map(item => ({\r\n            value: item._id,\r\n            label: item.name,\r\n            isLeaf: false\r\n        }));\r\n        // 如果是二级分类\r\n        const {isUpdate, product} = this;\r\n        const {pCategoryId} = product;\r\n        if (isUpdate && pCategoryId !== '0') {\r\n            const subCategory = await this.getCategory(pCategoryId);\r\n            const cOptions = subCategory.map(item => ({\r\n                value: item._id,\r\n                label: item.name,\r\n                isLeaf: true\r\n            }));\r\n            const targetOptions = options.find(option => option.value === pCategoryId);\r\n            targetOptions.children = cOptions;\r\n        }\r\n        this.setState({options});\r\n    };\r\n\r\n    // 获取级联数据\r\n    getCategory = async (parentId) => {\r\n        const result = await reqCategory(parentId);\r\n        if (result.status === 0) {\r\n            const category = result.data;\r\n            // 一级分类列表\r\n            if (parentId === '0') {\r\n                this.initOptions(category);\r\n            }\r\n            // 二级列表\r\n            else {\r\n                return category;\r\n            }\r\n        }\r\n    };\r\n    // TODO 加载下一级的数据\r\n    loadData = async (selectedOptions) => {\r\n        const targetOption = selectedOptions[0];\r\n        targetOption.loading = true;\r\n        const subCategory = await this.getCategory(targetOption.value);\r\n        targetOption.loading = false;\r\n        if (subCategory && subCategory.length > 0) {\r\n            // 子分类\r\n            const cOptions = subCategory.map(item => ({\r\n                value: item._id,\r\n                label: item.name,\r\n                isLeaf: true\r\n            }));\r\n            targetOption.children = cOptions;\r\n        } else { // 当前分类没有二级分类\r\n            targetOption.isLeaf = true;\r\n        }\r\n        this.setState({\r\n            options: [...this.state.options]\r\n        });\r\n    };\r\n\r\n    componentWillMount() {\r\n        // 判断有股点击修改数据或添加数据\r\n        const product = memoryUtils.product;\r\n        // 是否更新的标识\r\n        this.isUpdate = !!product._id;\r\n        // 保存商品，如果没有，保存空对象\r\n        this.product = product || {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCategory('0');\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        // 清除数据\r\n        memoryUtils.product = {};\r\n    }\r\n\r\n    render() {\r\n        const {isUpdate, product} = this;\r\n        // 用来接收级联分类ID的数据\r\n        const categoryIds = [];\r\n        const {pCategoryId, categoryId, imgs, detail} = product;\r\n        // 一级分类\r\n        if (pCategoryId === '0') {\r\n            categoryIds.push(categoryId);\r\n        } else {\r\n            // 二级分类\r\n            categoryIds.push(pCategoryId);\r\n            categoryIds.push(categoryId);\r\n        }\r\n        const title = (\r\n            <span>\r\n                <LinkButton onClick={() => this.props.history.goBack()}>\r\n                      <Icon type='arrow-left'/>\r\n                </LinkButton>\r\n                <span>{isUpdate ? '修改商品' : '添加商品'}</span>\r\n            </span>\r\n        );\r\n        const {getFieldDecorator} = this.props.form;\r\n        // 设置表单布局\r\n        const formItemLayout = {\r\n            labelCol: {span: 2},\r\n            wrapperCol: {span: 8},\r\n        };\r\n\r\n        return (\r\n            <Card title={title}>\r\n                <Form {...formItemLayout}>\r\n                    <Item label='商品名称'>\r\n                        {\r\n                            getFieldDecorator('name', {\r\n                                initialValue: product.name,\r\n                                rules: [{\r\n                                    required: true,\r\n                                    message: '名称必须输入'\r\n                                }]\r\n                            })(<Input placeholder='请输入商品名称'/>)\r\n                        }\r\n                    </Item>\r\n                    <Item label='商品描述'>\r\n                        {\r\n                            getFieldDecorator('desc', {\r\n                                initialValue: product.desc,\r\n                                rules: [{\r\n                                    required: true,\r\n                                    message: '描述必须输入'\r\n                                }]\r\n                            })(\r\n                                <TextArea placeholder='请输入商品描述' autosize={{minRows: 2, maxRows: 6}}/>\r\n                            )\r\n                        }\r\n                    </Item>\r\n                    <Item label='商品价格'>\r\n                        {\r\n                            getFieldDecorator('price', {\r\n                                initialValue: product.price,\r\n                                rules: [\r\n                                    {required: true, message: '必须输入价格'},\r\n                                    {validator: this.validatorPrice}\r\n                                ]\r\n                            })(<Input type='number' addonAfter='元' placeholder='请输入商品价格'/>)\r\n                        }\r\n                    </Item>\r\n                    <Item label='商品分类'>\r\n                        {\r\n                            getFieldDecorator('categoryIds', {\r\n                                initialValue: [],\r\n                                rules: [{\r\n                                    required: true,\r\n                                    message: '必须指定分类'\r\n                                }]\r\n                            })(\r\n                                <Cascader\r\n                                    options={this.state.options}\r\n                                    loadData={this.loadData}\r\n                                    changeOnSelect\r\n                                />\r\n                            )\r\n                        }\r\n                    </Item>\r\n                    <Item label='商品图片'>\r\n                        <PictureWall ref={this.pw} imgs={imgs}/>\r\n                    </Item>\r\n                    <Item label='商品详情' labelCol={{span: 2}} wrapperCol={{span: 20}}>\r\n                        <RichTextEditor ref={this.ed} detail={detail}/>\r\n                    </Item>\r\n                    <Button type='primary' onClick={this.submit}>添加商品</Button>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create()(ProductAddUpdate);\r\n","import React, {Component} from 'react';\r\nimport {Card, List, Icon} from 'antd';\r\nimport LinkButton from './../../components/link-button';\r\nimport {BASE_IMG_URL} from './../../utils/constants';\r\nimport {reqCategoryId} from './../../api';\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst Item = List.Item;\r\n\r\nclass ProductDetails extends Component {\r\n\r\n    state = {\r\n        cName1: '',\r\n        cName2: ''\r\n    };\r\n\r\n    // TODO 获取分类ID\r\n    async componentDidMount() {\r\n        // 得到当前分类ID以及父分类ID\r\n        const {pCategoryId, categoryId} = memoryUtils.product;\r\n        if (pCategoryId === '0') {\r\n            // 一级分类下的商品\r\n            const result = await reqCategoryId(categoryId);\r\n            if (result.status === 0) {\r\n                const cName1 = result.data.name;\r\n                this.setState({cName1});\r\n            }\r\n        } else {\r\n            // 二级分类下的商品\r\n\r\n            /*\r\n            TODO 性能低，后一个请求必须等前一个请求处理成功后才执行\r\n            const result1 = await reqCategoryId(pCategoryId);\r\n            const result2 = await reqCategoryId(categoryId);\r\n            */\r\n            //  方案优化\r\n            const results = await Promise.all([reqCategoryId(pCategoryId), reqCategoryId(categoryId)]);\r\n           if (results.status === 0) {\r\n               const cName1 = results[0].data.name;\r\n               const cName2 = results[1].data.name;\r\n               this.setState({\r\n                   cName1,\r\n                   cName2\r\n               });\r\n           }\r\n        }\r\n    }\r\n\r\n\r\n    componentWillUnmount(): void {\r\n        // 清除数据\r\n        memoryUtils.product = {};\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {name, desc, price, detail, imgs, cName1, cName2} = memoryUtils.product;\r\n\r\n        const title = (\r\n            <span>\r\n               <LinkButton>\r\n                    <Icon\r\n                        type='arrow-left'\r\n                        onClick={() => this.props.history.goBack()}\r\n                    />\r\n               </LinkButton>\r\n                <span>商品详情</span>\r\n            </span>\r\n        );\r\n\r\n        return (\r\n            <Card title={title} className='details-container'>\r\n                <List>\r\n                    <Item>\r\n                        <span className='details-name'>商品名称:</span>\r\n                        <span className='details-desc'>{name}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className='details-name'>商品描述:</span>\r\n                        <span className='details-desc'>{desc}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className='details-name'>商品价格:</span>\r\n                        <span className='details-desc'>{price}元</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className='details-name'>所属分类:</span>\r\n                        <span className='details-desc'>\r\n                            {cName1}{cName2 ? '-->' + cName2 : ''}\r\n                        </span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className='details-name'>商品图片:</span>\r\n                        <span className='details-desc'>\r\n                            {\r\n                                imgs.map(img => (\r\n                                    <img\r\n                                        className='details-img'\r\n                                        key={img}\r\n                                        src={BASE_IMG_URL + img}\r\n                                        alt=\"img desc\"\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className='details-name'>商品详情:</span>\r\n                        <span dangerouslySetInnerHTML={{__html: detail}}></span>\r\n                    </Item>\r\n                </List>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductDetails;\r\n","import React, {Component} from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport ProductHome from './ProductHome';\r\nimport ProductAddUpdate from './ProductAddUpdate';\r\nimport ProductDetails from './ProductDetails';\r\nimport './index.less';\r\n/**\r\n * TODO  商品路由\r\n */\r\n\r\nclass Product extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route exact path='/product' component={ProductHome} />\r\n                <Route exact path='/product/add' component={ProductAddUpdate} />\r\n                <Route exact path='/product/details' component={ProductDetails} />\r\n                <Redirect to='/product' />\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Product;\r\n","import React, {Component} from 'react';\r\nimport {\r\n    Form,\r\n    Input\r\n} from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Item = Form.Item;\r\nclass AddRoles extends Component {\r\n\r\n    static propTypes = {\r\n        setForm: PropTypes.func.isRequired\r\n    };\r\n\r\n    componentWillMount(): void {\r\n        this.props.setForm(this.props.form);\r\n    }\r\n\r\n    render() {\r\n        const {getFieldDecorator} = this.props.form;\r\n\r\n        return (\r\n            <Form>\r\n                <Item label='角色名称' labelCol={{span: 4}} wrapperCol={{span: 20}}>\r\n                    {\r\n                        getFieldDecorator('roleName', {\r\n                            initialValue: '',\r\n                            rules: [{\r\n                                required: true,\r\n                                message: '角色名必须输入'\r\n                            }]\r\n                        })(\r\n                            <Input placeholder='请输入角色名' />\r\n                        )\r\n                    }\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create({})(AddRoles);\r\n","import React, {PureComponent} from 'react';\r\nimport {Tree, Input, Form} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport menuList from './../../config/menuConfig';\r\n\r\nconst {Item} = Form;\r\nconst {TreeNode} = Tree;\r\n\r\nclass TreeRole extends PureComponent {\r\n    static propTypes = {\r\n        role: PropTypes.object.isRequired\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const {menus} = this.props.role;\r\n        this.state = {\r\n            checkedKeys: menus\r\n        };\r\n\r\n    }\r\n\r\n    onCheck = (checkedKeys) => {\r\n        this.setState({checkedKeys});\r\n    };\r\n\r\n    // 获取Tree\r\n    getTreeNode = (menuList) => {\r\n        return menuList.map(item => (\r\n            <TreeNode title={item.title} key={item.key}>\r\n                {item.children ? this.getTreeNode(item.children) : null}\r\n            </TreeNode>\r\n        ));\r\n    };\r\n\r\n    getMenus = () => this.state.checkedKeys;\r\n\r\n    componentWillMount(): void {\r\n        this.treeNode = this.getTreeNode(menuList);\r\n    }\r\n\r\n    render() {\r\n        const {role} = this.props;\r\n        const {checkedKeys} = this.state;\r\n        return (\r\n           <div>\r\n                   <Item label='角色名称' labelCol={{span: 4}} wrapperCol={{span: 20}}>\r\n                       <Input value={role.name} disabled/>\r\n                   </Item>\r\n               <Tree\r\n                   defaultExpandAll\r\n                   checkable\r\n                   checkedKeys={checkedKeys}\r\n                   onCheck={this.onCheck}\r\n               >\r\n                   <TreeNode title=\"平台权限\" key=\"0-0\">\r\n                       {this.treeNode}\r\n                   </TreeNode>\r\n               </Tree>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TreeRole;\r\n","import React, {Component} from 'react';\r\nimport {Card, Button, Table, Modal, message} from 'antd';\r\nimport {PAGE_SIZE} from \"../../utils/constants\";\r\nimport {formateDate} from './../../utils/dateUtils';\r\nimport AddRoles from './AddRoles';\r\nimport TreeRole from './TreeRole';\r\nimport {reqRole, reqAddRole, reqRoleAuth} from './../../api';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from \"../../redux/actions\";\r\n\r\n/**\r\n * 角色路由\r\n */\r\n\r\nclass Role extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roles: [],\r\n            role: {},\r\n            isShowAdd: false,\r\n            isShowAuth: false\r\n        };\r\n        this.auth = React.createRef();\r\n    }\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'name'\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'create_time',\r\n                // TODO 函数只传递一个参数，简写\r\n                render: formateDate\r\n            },\r\n            {\r\n                title: '授权时间',\r\n                dataIndex: 'auth_time',\r\n                render: formateDate\r\n            },\r\n            {\r\n                title: '授权人',\r\n                dataIndex: 'auth_name'\r\n            }\r\n        ];\r\n    };\r\n    onRow = (role) => {\r\n        return {\r\n            onClick: event => {\r\n               this.setState({role})\r\n            }, // 点击行\r\n        };\r\n    };\r\n\r\n    // TODO 获取角色列表\r\n    getRoleList = async () => {\r\n      const result = await reqRole();\r\n      if (result.status === 0) {\r\n          const roles = result.data;\r\n          this.setState({roles});\r\n      }\r\n    };\r\n    // 添加角色\r\n    addRoles = () => {\r\n        this.form.validateFields(async (err, data) => {\r\n            if (!err) {\r\n                const {roleName} = data;\r\n                const result = await reqAddRole(roleName);\r\n                if (result.status === 0) {\r\n                    message.success('添加角色成功');\r\n                    const role = result.data;\r\n                    // 更新roles的状态\r\n                    /*const roles = [...this.state.roles];\r\n                    roles.push(role);\r\n                    this.setState({roles});*/\r\n                    // TODO 方案优化， 基于原本数组的数据进行更新\r\n                    this.setState(state => ({\r\n                        roles: [...state.roles, role]\r\n                    }));\r\n                    this.setState({isShowAdd: false})\r\n                }  else {\r\n                    message.error('角色创建失败');\r\n                }\r\n            }\r\n        });\r\n    };\r\n    // TODO 权限管理\r\n    authRole = async () => {\r\n        const role = this.state.role;\r\n        const menus = this.auth.current.getMenus();\r\n        role.menus = menus;\r\n        // 授权人\r\n        role.auth_name = this.props.user.username;\r\n        const result = await reqRoleAuth(role);\r\n        if (result.status === 0) {\r\n            this.setState({isShowAuth: false});\r\n            // TODO 如果当前更新的是自己角色的权限，强制退出登录\r\n            if (role._id === this.props.user.role_id) {\r\n                message.info('您已修改了权限，请重新登录');\r\n                this.props.logout();\r\n            } else {\r\n                message.success('授权成功');\r\n                this.getRoleList();\r\n            }\r\n        } else message.error('授权失败');\r\n    };\r\n\r\n    componentWillMount(): void {\r\n        this.initColumns();\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.getRoleList();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {roles, role, isShowAdd, isShowAuth} = this.state;\r\n\r\n        const title = (\r\n            <span>\r\n                <Button\r\n                    type='primary'\r\n                    style={{marginRight: 10}}\r\n                    onClick={() => this.setState({isShowAdd: true})}\r\n                >\r\n                    创建角色\r\n                </Button>\r\n                <Button\r\n                    type='primary'\r\n                    disabled={!role._id}\r\n                    onClick={() => this.setState({isShowAuth: true})}\r\n                >\r\n                    设置角色权限\r\n                </Button>\r\n            </span>\r\n        );\r\n\r\n        return (\r\n           <Card title={title}>\r\n               <Table\r\n                   dataSource={roles}\r\n                   columns={this.columns}\r\n                   onRow={this.onRow}\r\n                   bordered\r\n                   pagination={{\r\n                       defaultPageSize: PAGE_SIZE,\r\n                       showQuickJumper: true\r\n                   }}\r\n                   rowKey='_id'\r\n                   rowSelection={{\r\n                       type: 'Radio',\r\n                       selectedRowKeys: [role._id],\r\n                       onSelect: (role) => {\r\n                           this.setState({role})\r\n                       }\r\n                   }}\r\n               />\r\n               {\r\n                   isShowAdd &&\r\n                   <Modal\r\n                       title=\"添加角色\"\r\n                       visible={isShowAdd}\r\n                       onOk={this.addRoles}\r\n                       onCancel={() => this.setState({isShowAdd: false})}\r\n                       okText=\"确认\"\r\n                       cancelText=\"取消\"\r\n                   >\r\n                       <AddRoles\r\n                           setForm={(form) => this.form = form}\r\n                       />\r\n                   </Modal>\r\n               }\r\n               {\r\n                   isShowAuth &&\r\n                   <Modal\r\n                       title=\"权限管理\"\r\n                       visible={isShowAuth}\r\n                       onOk={this.authRole}\r\n                       onCancel={() => this.setState({isShowAuth: false})}\r\n                       okText=\"确认\"\r\n                       cancelText=\"取消\"\r\n                   >\r\n                       <TreeRole\r\n                           role={role}\r\n                           ref={this.auth}\r\n                       />\r\n                   </Modal>\r\n               }\r\n           </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({user: state.user}),\r\n    {logout}\r\n)(Role);\r\n","import React, {PureComponent} from 'react';\r\nimport {Form, Input, Select} from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst {Item} = Form;\r\nconst {Option} = Select;\r\n\r\nclass UserForm extends PureComponent {\r\n\r\n    static propTypes = {\r\n      setForm: PropTypes.func.isRequired,\r\n      roles: PropTypes.array.isRequired,\r\n      user: PropTypes.object\r\n    };\r\n\r\n    componentWillMount(): void {\r\n        this.props.setForm(this.props.form);\r\n    }\r\n\r\n    // TODO 验证手机号码\r\n    phoneValidate = (rule, value, callback) => {\r\n        let phone = /^1((3[\\d])|(4[5,6,9])|(5[0-3,5-9])|(6[5-7])|(7[0-8])|(8[1-3,5-8])|(9[1,8,9]))\\d{8}$/;\r\n        if (phone.test(value)) callback();\r\n        else callback('请输入正确的手机号码');\r\n    };\r\n    // TODO 验证邮箱\r\n    emailValidate = (rule, value, callback) => {\r\n        let email = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\r\n        if (email.test(value)) callback();\r\n        else callback('请输入正确的邮箱格式');\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        const {getFieldDecorator} = this.props.form;\r\n        const {roles} = this.props;\r\n        const user = this.props.user || {};\r\n        // 设置表单布局\r\n        const formItemLayout = {\r\n            labelCol: {span: 4},\r\n            wrapperCol: {span: 20},\r\n        };\r\n\r\n\r\n        return (\r\n            <Form {...formItemLayout}>\r\n                <Item label='用户名'>\r\n                    {\r\n                        getFieldDecorator('username',{\r\n                            initialValue: user.username,\r\n                            rules: [\r\n                                {required: true, whiteSpace: true, message: '请输入用户名'},\r\n                                {min: 4, message: '用户名至少为4位'},\r\n                                {max: 12, message: '用户名最多12位'},\r\n                                {pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是字母，数字下划线组成'}\r\n                            ],\r\n                        })(\r\n                            <Input placeholder='请输入用户名'/>\r\n                        )\r\n                    }\r\n                </Item>\r\n                {\r\n                    user._id ? null : (\r\n                        <Item label='密码'>\r\n                            {\r\n                                getFieldDecorator('password',{\r\n                                    initialValue: user.password,\r\n                                    rules: [\r\n                                        {required: true, whiteSpace: true, message: '请输入密码'},\r\n                                        {min: 5, message: '密码至少为五位'},\r\n                                        {max: 12, message: '密码最多12位'}\r\n                                    ],\r\n                                })(\r\n                                    <Input type='password' placeholder='请输入密码'/>\r\n                                )\r\n                            }\r\n                        </Item>\r\n                    )\r\n                }\r\n                <Item label='手机号码'>\r\n                    {\r\n                        getFieldDecorator('phone',{\r\n                            initialValue: user.phone,\r\n                            rules:[\r\n                                {required: true, message: '手机号码必须填写'},\r\n                                {validator: this.phoneValidate}\r\n                            ]\r\n                        })(\r\n                            <Input placeholder='请输入手机号码'/>\r\n                        )\r\n                    }\r\n                </Item>\r\n                <Item label='邮箱'>\r\n                    {\r\n                        getFieldDecorator('email',{\r\n                            initialValue: user.email,\r\n                            rules: [\r\n                                {required: true, message: '邮箱必须填写'},\r\n                                {validator: this.emailValidate}\r\n                            ]\r\n                        })(\r\n                            <Input placeholder='请输入邮箱'/>\r\n                        )\r\n                    }\r\n                </Item>\r\n                <Item label='角色'>\r\n                    {\r\n                        getFieldDecorator('role_id',{\r\n                            initialValue: user.role_id,\r\n                            rules: [\r\n                                {required: true, message: '角色请选者'},\r\n                            ]\r\n                        })(\r\n                            <Select>\r\n                                {\r\n                                    roles.map(item => (\r\n                                        <Option value={item._id} key={item._id}>{item.name}</Option>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create()(UserForm);\r\n","import React, {Component} from 'react';\r\nimport {Card, Table, Modal, Button, message} from 'antd';\r\nimport {PAGE_SIZE} from \"../../utils/constants\";\r\nimport {formateDate} from './../../utils/dateUtils';\r\nimport {reqUserList, reqDeleteUser, reqAddOrUpdateUser} from './../../api';\r\nimport LinkButton from './../../components/link-button';\r\nimport UserForm from './UserForm';\r\n\r\n/**\r\n * 用户路由\r\n */\r\n\r\nclass User extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [], // 用户列表\r\n            roles: [], // 角色列表\r\n            isShow: false\r\n        }\r\n    }\r\n\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'username'\r\n            },\r\n            {\r\n                title: '邮箱',\r\n                dataIndex: 'email'\r\n            },\r\n\r\n            {\r\n                title: '电话',\r\n                dataIndex: 'phone'\r\n            },\r\n            {\r\n                title: '注册时间',\r\n                dataIndex: 'create_time',\r\n                render: formateDate\r\n            },\r\n            {\r\n                title: '所属角色',\r\n                dataIndex: 'role_id',\r\n                render: (role_id) => this.roleNames[role_id]\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (user) => (\r\n                    <span>\r\n            <LinkButton onClick={() => this.showUpdate(user)}>修改</LinkButton>\r\n            <LinkButton onClick={() => this.deleteUser(user)}>删除</LinkButton>\r\n          </span>\r\n                )\r\n            },\r\n        ];\r\n    };\r\n    initRoleNames = (roles) => {\r\n        const roleNames = roles.reduce((pre, role) => {\r\n            pre[role._id] = role.name;\r\n            return pre\r\n        }, {});\r\n        // 保存\r\n        this.roleNames = roleNames\r\n    };\r\n\r\n\r\n    getUserList = async () => {\r\n      const result = await reqUserList();\r\n      if (result.status === 0) {\r\n          const {users, roles} = result.data;\r\n          this.initRoleNames(roles);\r\n          this.setState({ users, roles });\r\n      }\r\n    };\r\n\r\n    // TODO 添加或更新用户信息\r\n    addOrUpdateUser = () => {\r\n        this.form.validateFields(async (err, value) => {\r\n            if (!err) {\r\n                this.setState({isShow: false});\r\n                const user = this.form.getFieldsValue();\r\n                if (this.user && this.user._id) {\r\n                    user._id = this.user._id;\r\n                }\r\n                const result = await reqAddOrUpdateUser(user);\r\n                if (result.status === 0) {\r\n                    message.success(`${this.user ? '更新' : '添加'}用户成功`);\r\n                    this.getUserList();\r\n                }\r\n            }\r\n\r\n        })\r\n    };\r\n\r\n    //  显示用户详情信息\r\n    showUpdate = (user) => {\r\n        this.user = user;\r\n        this.setState({isShow: true})\r\n    };\r\n\r\n    showAdd = () => {\r\n        this.user = null;\r\n        this.setState({isShow: true})\r\n    };\r\n\r\n    // TODO  删除用户\r\n    deleteUser = (user) => {\r\n        Modal.confirm({\r\n            title: `您确定${user.username}删除吗`,\r\n            okText: \"确认\",\r\n            cancelText: \"取消\",\r\n            onOk: async () => {\r\n                const result = await reqDeleteUser(user._id);\r\n                if (result.status === 0) {\r\n                    message.success(`删除${user.username}成功`);\r\n                    this.getUserList();\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    componentWillMount(): void {\r\n        this.initColumns();\r\n    }\r\n    componentDidMount(): void {\r\n        this.getUserList();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {users, roles, isShow} = this.state;\r\n        const user = this.user || {};\r\n        const title = (<Button type='primary' onClick={this.showAdd}>创建用户</Button>);\r\n\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    bordered\r\n                    rowKey='_id'\r\n                    dataSource={users}\r\n                    columns={this.columns}\r\n                    pagination={{defaultPageSize: PAGE_SIZE, showQuickJumper:true}}\r\n                />\r\n                {\r\n                    isShow &&\r\n                    <Modal\r\n                        title={user._id ? '修改用户' : '添加用户'}\r\n                        visible={isShow}\r\n                        onOk={this.addOrUpdateUser}\r\n                        okText='确认'\r\n                        cancelText='取消'\r\n                        onCancel={() => {\r\n                            this.setState({isShow: false})\r\n                        }}\r\n                    >\r\n                        <UserForm\r\n                            setForm={form => this.form = form}\r\n                            roles={roles}\r\n                            user={user}\r\n                        />\r\n                    </Modal>\r\n                }\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User;\r\n","import React, {Component} from 'react';\r\nimport {Card, Button} from 'antd';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\n/**\r\n * 条状图路由\r\n */\r\nclass Bar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            salesVolume: [5, 20, 36, 10, 10, 20],\r\n            Stock: [10, 15, 20, 25, 30, 10]\r\n        }\r\n    }\r\n\r\n    update = () => {\r\n      this.setState(state => ({\r\n         salesVolume: state.salesVolume.map(sale => sale + 1),\r\n         Stock: state.Stock.map(stock => stock - 1)\r\n      }));\r\n    };\r\n\r\n    getOption = (salesVolume, Stock) => {\r\n        return {\r\n            title: {\r\n                text: 'ECharts 入门示例'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data:['销量', '库存']\r\n            },\r\n            xAxis: {\r\n                data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n            },\r\n            yAxis: {},\r\n            series: [\r\n                {\r\n                name: '销量',\r\n                type: 'bar',\r\n                data: salesVolume\r\n                },\r\n                {\r\n                    name: '库存',\r\n                    type: 'bar',\r\n                    data: Stock\r\n                }\r\n            ]\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {salesVolume, Stock} = this.state;\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button type='primary' onClick={this.update}>更新</Button>\r\n                </Card>\r\n                <Card title='柱状图实例'>\r\n                    <ReactEcharts\r\n                        option={this.getOption(salesVolume, Stock)}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Bar;\r\n","import React, {Component} from 'react';\r\nimport {Card, Button} from 'antd';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\n/**\r\n * 折线图图路由\r\n */\r\nclass Line extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            salesVolume: [5, 20, 36, 10, 10, 20],\r\n            Stock: [10, 15, 20, 25, 30, 10]\r\n        }\r\n    }\r\n\r\n    update = () => {\r\n        this.setState(state => ({\r\n            salesVolume: state.salesVolume.map(sale => sale + 1),\r\n            Stock: state.Stock.map(stock => stock - 1)\r\n        }));\r\n    };\r\n\r\n    getOption = (salesVolume, Stock) => {\r\n        return {\r\n            title: {\r\n                text: 'ECharts 入门示例'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data:['销量', '库存']\r\n            },\r\n            xAxis: {\r\n                data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n            },\r\n            yAxis: {},\r\n            series: [\r\n                {\r\n                    name: '销量',\r\n                    type: 'line',\r\n                    data: salesVolume\r\n                },\r\n                {\r\n                    name: '库存',\r\n                    type: 'line',\r\n                    data: Stock\r\n                }\r\n            ]\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {salesVolume, Stock} = this.state;\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button type='primary' onClick={this.update}>更新</Button>\r\n                </Card>\r\n                <Card title='折线图实例'>\r\n                    <ReactEcharts\r\n                        option={this.getOption(salesVolume, Stock)}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Line;\r\n","import React, {Component} from 'react'\r\nimport {Card} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的饼图路由组件\r\n */\r\nexport default class Pie extends Component {\r\n\r\n    getOption = () => {\r\n        return {\r\n            title : {\r\n                text: '某站点用户访问来源',\r\n                subtext: '纯属虚构',\r\n                x:'center'\r\n            },\r\n            tooltip : {\r\n                trigger: 'item',\r\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 'left',\r\n                data: ['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\r\n            },\r\n            series : [\r\n                {\r\n                    name: '访问来源',\r\n                    type: 'pie',\r\n                    radius : '55%',\r\n                    center: ['50%', '60%'],\r\n                    data:[\r\n                        {value:335, name:'直接访问'},\r\n                        {value:310, name:'邮件营销'},\r\n                        {value:234, name:'联盟广告'},\r\n                        {value:135, name:'视频广告'},\r\n                        {value:1548, name:'搜索引擎'}\r\n                    ],\r\n                    itemStyle: {\r\n                        emphasis: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n\r\n    }\r\n\r\n    getOption2 = () => {\r\n        return {\r\n            backgroundColor: '#2c343c',\r\n\r\n            title: {\r\n                text: 'Customized Pie',\r\n                left: 'center',\r\n                top: 20,\r\n                textStyle: {\r\n                    color: '#ccc'\r\n                }\r\n            },\r\n\r\n            tooltip : {\r\n                trigger: 'item',\r\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n            },\r\n\r\n            visualMap: {\r\n                show: false,\r\n                min: 80,\r\n                max: 600,\r\n                inRange: {\r\n                    colorLightness: [0, 1]\r\n                }\r\n            },\r\n            series : [\r\n                {\r\n                    name:'访问来源',\r\n                    type:'pie',\r\n                    radius : '55%',\r\n                    center: ['50%', '50%'],\r\n                    data:[\r\n                        {value:335, name:'直接访问'},\r\n                        {value:310, name:'邮件营销'},\r\n                        {value:274, name:'联盟广告'},\r\n                        {value:235, name:'视频广告'},\r\n                        {value:400, name:'搜索引擎'}\r\n                    ].sort(function (a, b) { return a.value - b.value; }),\r\n                    roseType: 'radius',\r\n                    label: {\r\n                        normal: {\r\n                            textStyle: {\r\n                                color: 'rgba(255, 255, 255, 0.3)'\r\n                            }\r\n                        }\r\n                    },\r\n                    labelLine: {\r\n                        normal: {\r\n                            lineStyle: {\r\n                                color: 'rgba(255, 255, 255, 0.3)'\r\n                            },\r\n                            smooth: 0.2,\r\n                            length: 10,\r\n                            length2: 20\r\n                        }\r\n                    },\r\n                    itemStyle: {\r\n                        normal: {\r\n                            color: '#c23531',\r\n                            shadowBlur: 200,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    },\r\n\r\n                    animationType: 'scale',\r\n                    animationEasing: 'elasticOut',\r\n                    animationDelay: function (idx) {\r\n                        return Math.random() * 200;\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title='饼图一'>\r\n                    <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n                </Card>\r\n                <Card title='饼图二'>\r\n                    <ReactEcharts option={this.getOption2()} style={{height: 300}}/>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport './error.less'\r\n/*\r\n前台404页面\r\n */\r\nexport default class Error extends Component {\r\n  render() {\r\n    return (\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={() => this.props.history.replace('/home')}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Redirect, Switch, Route} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {Layout} from 'antd';\r\nimport LeftNav from './../../components/left-nav/LeftNav';\r\nimport TopNav from './../../components/top-nav/TopNav';\r\nimport Home from '../home/Home';\r\nimport Category from '../category/Category';\r\nimport Product from '../product/Product';\r\nimport Role from '../role/Role';\r\nimport User from '../user/User';\r\nimport Bar from '../charts/Bar';\r\nimport Line from '../charts/Line';\r\nimport Pie from '../charts/Pie';\r\nimport Error from '../error/Error';\r\n\r\nimport './admin.less';\r\n\r\nconst { Footer, Sider, Content } = Layout;\r\n\r\n/**\r\n *  后台路由\r\n */\r\n\r\nclass Admin extends Component {\r\n    render() {\r\n        const user = this.props.user;\r\n        // 未登录\r\n        if (!user || !user._id) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        return (\r\n                <Layout style={{minHeight: '100%'}}>\r\n                    <Sider className='admin-sider'><LeftNav /></Sider>\r\n                    <Layout>\r\n                        <TopNav />\r\n                        <Content className='admin-main'>\r\n                            <Switch>\r\n                                <Redirect exact from='/' to='/home' />\r\n                                <Route path='/home' component={Home} />\r\n                                <Route path='/category' component={Category} />\r\n                                <Route path='/product' component={Product} />\r\n                                <Route path='/role' component={Role} />\r\n                                <Route path='/user' component={User} />\r\n                                <Route path='/charts/bar' component={Bar} />\r\n                                <Route path='/charts/line' component={Line} />\r\n                                <Route path='/charts/pie' component={Pie} />\r\n                                <Route  component={Error} />\r\n                            </Switch>\r\n                        </Content>\r\n                        <Footer className='admin-footer'>后台网站开发，个人开发娱乐</Footer>\r\n                    </Layout>\r\n                </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({user: state.user}),\r\n    {}\r\n)(Admin);\r\n","import React from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport Login from './pages/login/Login';\r\nimport Admin from './pages/admin/Admin';\r\nimport Error from './pages/error/Error';\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <Switch>\r\n                    <Route path='/login' component={Login} />\r\n                    <Route path='/' component={Admin} />\r\n                    <Route path='/error' component={Error} />\r\n                </Switch>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\r\n * 用来根据老的state和指定的action生成并返回对应的函数\r\n */\r\n\r\nimport {combineReducers} from 'redux';\r\nimport storageUtils from \"../utils/storageUtils\";\r\nimport {SET_HEADER_TITLE, GET_USER, RESET_USER} from './action-types';\r\n\r\n\r\n// 管理title\r\nconst initTitle = '首页';\r\nconst headerTitle = (state = initTitle, action) => {\r\n    switch (action.type) {\r\n        case SET_HEADER_TITLE:\r\n            return action.data;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// 管理用户信息\r\nconst initUser = storageUtils.getUser();\r\nconst user = (state = initUser, action) => {\r\n    switch (action.type) {\r\n        case GET_USER:\r\n            return action.user;\r\n        case RESET_USER:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default combineReducers({\r\n    headerTitle,\r\n    user\r\n});\r\n","/**\r\n * TODO redux核心管理对象\r\n */\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/store';\r\n\r\n\r\n\r\nReactDOM.render((\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n), document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}